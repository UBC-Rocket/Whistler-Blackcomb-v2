// file generated by jsll_gen.c on a system with 64-bit integers

#define SHIFT_BITS 13
typedef struct testrec_t {
   JSInt64 a, b, add, sub, mul, and, or, xor, not, neg;
   JSInt64 shl, shr, ushr;
   int32_t l2i;
   uint32_t l2ui;
   JSInt64 i2l;
   JSUint64 ui2l;
   const char *hexstr, *decstr, *udecstr;
   bool_t gtu, ltu, gt, lt;
} testrec_t;

const testrec_t tests[] = {
{ // record 0
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a
	JSLL_INIT( 0x00005852, 0x34de8ccf ),	// b
	JSLL_INIT( 0x00005852, 0x34de8ccf ),	// a + b
	JSLL_INIT( 0xffffa7ad, 0xcb217331 ),	// a - b
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a * b
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a & b
	JSLL_INIT( 0x00005852, 0x34de8ccf ),	// a | b
	JSLL_INIT( 0x00005852, 0x34de8ccf ),	// a ^ b
	JSLL_INIT( 0xffffffff, 0xffffffff ),	// ~a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// -a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a << 13
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a >> 13 (unsigned)
	0, UINT32_C(0),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// (uint64_t)(uint32_t)a
	"0000000000000000",	// a (hexadecimal)
	"0",	// a (signed decimal)
	"0",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 1
	JSLL_INIT( 0x976bab8f, 0x61995b04 ),	// a
	JSLL_INIT( 0x41faa1e3, 0xcfa159d8 ),	// b
	JSLL_INIT( 0xd9664d73, 0x313ab4dc ),	// a + b
	JSLL_INIT( 0x557109ab, 0x91f8012c ),	// a - b
	JSLL_INIT( 0xe9b6347f, 0x238d2f60 ),	// a * b
	JSLL_INIT( 0x016aa183, 0x41815900 ),	// a & b
	JSLL_INIT( 0xd7fbabef, 0xefb95bdc ),	// a | b
	JSLL_INIT( 0xd6910a6c, 0xae3802dc ),	// a ^ b
	JSLL_INIT( 0x68945470, 0x9e66a4fb ),	// ~a
	JSLL_INIT( 0x68945470, 0x9e66a4fc ),	// -a
	JSLL_INIT( 0x7571ec33, 0x2b608000 ),	// a << 13
	JSLL_INIT( 0xfffcbb5d, 0x5c7b0cca ),	// a >> 13 (signed)
	JSLL_INIT( 0x0004bb5d, 0x5c7b0cca ),	// a >> 13 (unsigned)
	1637440260, UINT32_C(1637440260),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x61995b04 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x61995b04 ),	// (uint64_t)(uint32_t)a
	"976bab8f61995b04",	// a (hexadecimal)
	"-7535740919168279804",	// a (signed decimal)
	"10911003154541271812",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 2
	JSLL_INIT( 0x5712fcd3, 0x5f74b7ff ),	// a
	JSLL_INIT( 0x68efd8dd, 0xce0fbaf1 ),	// b
	JSLL_INIT( 0xc002d5b1, 0x2d8472f0 ),	// a + b
	JSLL_INIT( 0xee2323f5, 0x9164fd0e ),	// a - b
	JSLL_INIT( 0xedd71960, 0xa4817d0f ),	// a * b
	JSLL_INIT( 0x4002d8d1, 0x4e04b2f1 ),	// a & b
	JSLL_INIT( 0x7ffffcdf, 0xdf7fbfff ),	// a | b
	JSLL_INIT( 0x3ffd240e, 0x917b0d0e ),	// a ^ b
	JSLL_INIT( 0xa8ed032c, 0xa08b4800 ),	// ~a
	JSLL_INIT( 0xa8ed032c, 0xa08b4801 ),	// -a
	JSLL_INIT( 0x5f9a6bee, 0x96ffe000 ),	// a << 13
	JSLL_INIT( 0x0002b897, 0xe69afba5 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0002b897, 0xe69afba5 ),	// a >> 13 (unsigned)
	1601484799, UINT32_C(1601484799),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x5f74b7ff ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x5f74b7ff ),	// (uint64_t)(uint32_t)a
	"5712fcd35f74b7ff",	// a (hexadecimal)
	"6274355215650306047",	// a (signed decimal)
	"6274355215650306047",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 3
	JSLL_INIT( 0xfb068919, 0xe4062f7a ),	// a
	JSLL_INIT( 0x1a3e792f, 0x9f00702c ),	// b
	JSLL_INIT( 0x15450249, 0x83069fa6 ),	// a + b
	JSLL_INIT( 0xe0c80fea, 0x4505bf4e ),	// a - b
	JSLL_INIT( 0xc2da1d18, 0xabd588f8 ),	// a * b
	JSLL_INIT( 0x1a060909, 0x84002028 ),	// a & b
	JSLL_INIT( 0xfb3ef93f, 0xff067f7e ),	// a | b
	JSLL_INIT( 0xe138f036, 0x7b065f56 ),	// a ^ b
	JSLL_INIT( 0x04f976e6, 0x1bf9d085 ),	// ~a
	JSLL_INIT( 0x04f976e6, 0x1bf9d086 ),	// -a
	JSLL_INIT( 0xd1233c80, 0xc5ef4000 ),	// a << 13
	JSLL_INIT( 0xffffd834, 0x48cf2031 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0007d834, 0x48cf2031 ),	// a >> 13 (unsigned)
	-469356678, UINT32_C(3825610618),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xe4062f7a ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xe4062f7a ),	// (uint64_t)(uint32_t)a
	"fb068919e4062f7a",	// a (hexadecimal)
	"-358448376036577414",	// a (signed decimal)
	"18088295697672974202",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 4
	JSLL_INIT( 0xdf4e73e2, 0x99f7df74 ),	// a
	JSLL_INIT( 0x8e94289b, 0x40dc5faf ),	// b
	JSLL_INIT( 0x6de29c7d, 0xdad43f23 ),	// a + b
	JSLL_INIT( 0x50ba4b47, 0x591b7fc5 ),	// a - b
	JSLL_INIT( 0x7beb0327, 0x440dcc4c ),	// a * b
	JSLL_INIT( 0x8e042082, 0x00d45f24 ),	// a & b
	JSLL_INIT( 0xdfde7bfb, 0xd9ffdfff ),	// a | b
	JSLL_INIT( 0x51da5b79, 0xd92b80db ),	// a ^ b
	JSLL_INIT( 0x20b18c1d, 0x6608208b ),	// ~a
	JSLL_INIT( 0x20b18c1d, 0x6608208c ),	// -a
	JSLL_INIT( 0xce7c533e, 0xfbee8000 ),	// a << 13
	JSLL_INIT( 0xfffefa73, 0x9f14cfbe ),	// a >> 13 (signed)
	JSLL_INIT( 0x0006fa73, 0x9f14cfbe ),	// a >> 13 (unsigned)
	-1711808652, UINT32_C(2583158644),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x99f7df74 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x99f7df74 ),	// (uint64_t)(uint32_t)a
	"df4e73e299f7df74",	// a (hexadecimal)
	"-2355818137985228940",	// a (signed decimal)
	"16090925935724322676",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 5
	JSLL_INIT( 0xdbc76e81, 0xf66bbfa4 ),	// a
	JSLL_INIT( 0x73029680, 0x63f12fdb ),	// b
	JSLL_INIT( 0x4eca0502, 0x5a5cef7f ),	// a + b
	JSLL_INIT( 0x68c4d801, 0x927a8fc9 ),	// a - b
	JSLL_INIT( 0x6efbf5f7, 0x6bc00d4c ),	// a * b
	JSLL_INIT( 0x53020680, 0x62612f80 ),	// a & b
	JSLL_INIT( 0xfbc7fe81, 0xf7fbbfff ),	// a | b
	JSLL_INIT( 0xa8c5f801, 0x959a907f ),	// a ^ b
	JSLL_INIT( 0x2438917e, 0x0994405b ),	// ~a
	JSLL_INIT( 0x2438917e, 0x0994405c ),	// -a
	JSLL_INIT( 0xedd03ecd, 0x77f48000 ),	// a << 13
	JSLL_INIT( 0xfffede3b, 0x740fb35d ),	// a >> 13 (signed)
	JSLL_INIT( 0x0006de3b, 0x740fb35d ),	// a >> 13 (unsigned)
	-160710748, UINT32_C(4134256548),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xf66bbfa4 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xf66bbfa4 ),	// (uint64_t)(uint32_t)a
	"dbc76e81f66bbfa4",	// a (hexadecimal)
	"-2609995954573819996",	// a (signed decimal)
	"15836748119135731620",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 6
	JSLL_INIT( 0xed8691bb, 0x82bb54fb ),	// a
	JSLL_INIT( 0x703fd309, 0x4c8d004e ),	// b
	JSLL_INIT( 0x5dc664c4, 0xcf485549 ),	// a + b
	JSLL_INIT( 0x7d46beb2, 0x362e54ad ),	// a - b
	JSLL_INIT( 0x077ce35d, 0x2752e47a ),	// a * b
	JSLL_INIT( 0x60069109, 0x0089004a ),	// a & b
	JSLL_INIT( 0xfdbfd3bb, 0xcebf54ff ),	// a | b
	JSLL_INIT( 0x9db942b2, 0xce3654b5 ),	// a ^ b
	JSLL_INIT( 0x12796e44, 0x7d44ab04 ),	// ~a
	JSLL_INIT( 0x12796e44, 0x7d44ab05 ),	// -a
	JSLL_INIT( 0xd2377057, 0x6a9f6000 ),	// a << 13
	JSLL_INIT( 0xffff6c34, 0x8ddc15da ),	// a >> 13 (signed)
	JSLL_INIT( 0x00076c34, 0x8ddc15da ),	// a >> 13 (unsigned)
	-2101652229, UINT32_C(2193315067),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x82bb54fb ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x82bb54fb ),	// (uint64_t)(uint32_t)a
	"ed8691bb82bb54fb",	// a (hexadecimal)
	"-1331216405303175941",	// a (signed decimal)
	"17115527668406375675",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 7
	JSLL_INIT( 0xf2fb281b, 0x136d8d93 ),	// a
	JSLL_INIT( 0xc877850e, 0xfb688624 ),	// b
	JSLL_INIT( 0xbb72ad2a, 0x0ed613b7 ),	// a + b
	JSLL_INIT( 0x2a83a30c, 0x1805076f ),	// a - b
	JSLL_INIT( 0x1b3c3b54, 0xb83adaac ),	// a * b
	JSLL_INIT( 0xc073000a, 0x13688400 ),	// a & b
	JSLL_INIT( 0xfaffad1f, 0xfb6d8fb7 ),	// a | b
	JSLL_INIT( 0x3a8cad15, 0xe8050bb7 ),	// a ^ b
	JSLL_INIT( 0x0d04d7e4, 0xec92726c ),	// ~a
	JSLL_INIT( 0x0d04d7e4, 0xec92726d ),	// -a
	JSLL_INIT( 0x6503626d, 0xb1b26000 ),	// a << 13
	JSLL_INIT( 0xffff97d9, 0x40d89b6c ),	// a >> 13 (signed)
	JSLL_INIT( 0x000797d9, 0x40d89b6c ),	// a >> 13 (unsigned)
	325946771, UINT32_C(325946771),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x136d8d93 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x136d8d93 ),	// (uint64_t)(uint32_t)a
	"f2fb281b136d8d93",	// a (hexadecimal)
	"-938112000621441645",	// a (signed decimal)
	"17508632073088109971",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 8
	JSLL_INIT( 0xf133c40a, 0xa0940559 ),	// a
	JSLL_INIT( 0xfa2a8afa, 0x330e977b ),	// b
	JSLL_INIT( 0xeb5e4f04, 0xd3a29cd4 ),	// a + b
	JSLL_INIT( 0xf7093910, 0x6d856dde ),	// a - b
	JSLL_INIT( 0xa91cede5, 0x7c2410c3 ),	// a * b
	JSLL_INIT( 0xf022800a, 0x20040559 ),	// a & b
	JSLL_INIT( 0xfb3bcefa, 0xb39e977b ),	// a | b
	JSLL_INIT( 0x0b194ef0, 0x939a9222 ),	// a ^ b
	JSLL_INIT( 0x0ecc3bf5, 0x5f6bfaa6 ),	// ~a
	JSLL_INIT( 0x0ecc3bf5, 0x5f6bfaa7 ),	// -a
	JSLL_INIT( 0x78815412, 0x80ab2000 ),	// a << 13
	JSLL_INIT( 0xffff899e, 0x205504a0 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0007899e, 0x205504a0 ),	// a >> 13 (unsigned)
	-1600912039, UINT32_C(2694055257),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xa0940559 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xa0940559 ),	// (uint64_t)(uint32_t)a
	"f133c40aa0940559",	// a (hexadecimal)
	"-1066293136833903271",	// a (signed decimal)
	"17380450936875648345",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 9
	JSLL_INIT( 0xdd474de4, 0xb1fd9716 ),	// a
	JSLL_INIT( 0xdfab4223, 0x7062e07e ),	// b
	JSLL_INIT( 0xbcf29008, 0x22607794 ),	// a + b
	JSLL_INIT( 0xfd9c0bc1, 0x419ab698 ),	// a - b
	JSLL_INIT( 0xf8fcdb7c, 0xf56f9cd4 ),	// a * b
	JSLL_INIT( 0xdd034020, 0x30608016 ),	// a & b
	JSLL_INIT( 0xdfef4fe7, 0xf1fff77e ),	// a | b
	JSLL_INIT( 0x02ec0fc7, 0xc19f7768 ),	// a ^ b
	JSLL_INIT( 0x22b8b21b, 0x4e0268e9 ),	// ~a
	JSLL_INIT( 0x22b8b21b, 0x4e0268ea ),	// -a
	JSLL_INIT( 0xe9bc963f, 0xb2e2c000 ),	// a << 13
	JSLL_INIT( 0xfffeea3a, 0x6f258fec ),	// a >> 13 (signed)
	JSLL_INIT( 0x0006ea3a, 0x6f258fec ),	// a >> 13 (unsigned)
	-1308780778, UINT32_C(2986186518),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xb1fd9716 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xb1fd9716 ),	// (uint64_t)(uint32_t)a
	"dd474de4b1fd9716",	// a (hexadecimal)
	"-2501945423346952426",	// a (signed decimal)
	"15944798650362599190",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 10
	JSLL_INIT( 0x16152741, 0x34b4132f ),	// a
	JSLL_INIT( 0x7674eebf, 0x73e00688 ),	// b
	JSLL_INIT( 0x8c8a1600, 0xa89419b7 ),	// a + b
	JSLL_INIT( 0x9fa03881, 0xc0d40ca7 ),	// a - b
	JSLL_INIT( 0xf55f6620, 0x1e3d4af8 ),	// a * b
	JSLL_INIT( 0x16142601, 0x30a00208 ),	// a & b
	JSLL_INIT( 0x7675efff, 0x77f417af ),	// a | b
	JSLL_INIT( 0x6061c9fe, 0x475415a7 ),	// a ^ b
	JSLL_INIT( 0xe9ead8be, 0xcb4becd0 ),	// ~a
	JSLL_INIT( 0xe9ead8be, 0xcb4becd1 ),	// -a
	JSLL_INIT( 0xa4e82696, 0x8265e000 ),	// a << 13
	JSLL_INIT( 0x0000b0a9, 0x3a09a5a0 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0000b0a9, 0x3a09a5a0 ),	// a >> 13 (unsigned)
	884216623, UINT32_C(884216623),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x34b4132f ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x34b4132f ),	// (uint64_t)(uint32_t)a
	"1615274134b4132f",	// a (hexadecimal)
	"1591221204355912495",	// a (signed decimal)
	"1591221204355912495",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 11
	JSLL_INIT( 0x6bd761fb, 0x94993a30 ),	// a
	JSLL_INIT( 0xf8833ad9, 0x26e8489d ),	// b
	JSLL_INIT( 0x645a9cd4, 0xbb8182cd ),	// a + b
	JSLL_INIT( 0x73542722, 0x6db0f193 ),	// a - b
	JSLL_INIT( 0xce547545, 0x15d62f70 ),	// a * b
	JSLL_INIT( 0x688320d9, 0x04880810 ),	// a & b
	JSLL_INIT( 0xfbd77bfb, 0xb6f97abd ),	// a | b
	JSLL_INIT( 0x93545b22, 0xb27172ad ),	// a ^ b
	JSLL_INIT( 0x94289e04, 0x6b66c5cf ),	// ~a
	JSLL_INIT( 0x94289e04, 0x6b66c5d0 ),	// -a
	JSLL_INIT( 0xec3f7293, 0x27460000 ),	// a << 13
	JSLL_INIT( 0x00035ebb, 0x0fdca4c9 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00035ebb, 0x0fdca4c9 ),	// a >> 13 (unsigned)
	-1801897424, UINT32_C(2493069872),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x94993a30 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x94993a30 ),	// (uint64_t)(uint32_t)a
	"6bd761fb94993a30",	// a (hexadecimal)
	"7770787415208835632",	// a (signed decimal)
	"7770787415208835632",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 12
	JSLL_INIT( 0x94d262fd, 0x8ca7d60f ),	// a
	JSLL_INIT( 0x51759f17, 0x7012eda1 ),	// b
	JSLL_INIT( 0xe6480214, 0xfcbac3b0 ),	// a + b
	JSLL_INIT( 0x435cc3e6, 0x1c94e86e ),	// a - b
	JSLL_INIT( 0xb634da79, 0x73c7826f ),	// a * b
	JSLL_INIT( 0x10500215, 0x0002c401 ),	// a & b
	JSLL_INIT( 0xd5f7ffff, 0xfcb7ffaf ),	// a | b
	JSLL_INIT( 0xc5a7fdea, 0xfcb53bae ),	// a ^ b
	JSLL_INIT( 0x6b2d9d02, 0x735829f0 ),	// ~a
	JSLL_INIT( 0x6b2d9d02, 0x735829f1 ),	// -a
	JSLL_INIT( 0x4c5fb194, 0xfac1e000 ),	// a << 13
	JSLL_INIT( 0xfffca693, 0x17ec653e ),	// a >> 13 (signed)
	JSLL_INIT( 0x0004a693, 0x17ec653e ),	// a >> 13 (unsigned)
	-1935157745, UINT32_C(2359809551),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x8ca7d60f ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x8ca7d60f ),	// (uint64_t)(uint32_t)a
	"94d262fd8ca7d60f",	// a (hexadecimal)
	"-7723001569860921841",	// a (signed decimal)
	"10723742503848629775",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 13
	JSLL_INIT( 0xab3c6757, 0x283690d9 ),	// a
	JSLL_INIT( 0xc7076ece, 0xf00502d9 ),	// b
	JSLL_INIT( 0x7243d626, 0x183b93b2 ),	// a + b
	JSLL_INIT( 0xe434f888, 0x38318e00 ),	// a - b
	JSLL_INIT( 0xcc7e04ab, 0xc79f79f1 ),	// a * b
	JSLL_INIT( 0x83046646, 0x200400d9 ),	// a & b
	JSLL_INIT( 0xef3f6fdf, 0xf83792d9 ),	// a | b
	JSLL_INIT( 0x6c3b0999, 0xd8339200 ),	// a ^ b
	JSLL_INIT( 0x54c398a8, 0xd7c96f26 ),	// ~a
	JSLL_INIT( 0x54c398a8, 0xd7c96f27 ),	// -a
	JSLL_INIT( 0x8ceae506, 0xd21b2000 ),	// a << 13
	JSLL_INIT( 0xfffd59e3, 0x3ab941b4 ),	// a >> 13 (signed)
	JSLL_INIT( 0x000559e3, 0x3ab941b4 ),	// a >> 13 (unsigned)
	674664665, UINT32_C(674664665),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x283690d9 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x283690d9 ),	// (uint64_t)(uint32_t)a
	"ab3c6757283690d9",	// a (hexadecimal)
	"-6107893370586754855",	// a (signed decimal)
	"12338850703122796761",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 14
	JSLL_INIT( 0x4cafebc9, 0x80de5135 ),	// a
	JSLL_INIT( 0xf29e7d5b, 0xcf44fe2a ),	// b
	JSLL_INIT( 0x3f4e6925, 0x50234f5f ),	// a + b
	JSLL_INIT( 0x5a116e6d, 0xb199530b ),	// a - b
	JSLL_INIT( 0x46ec5a7a, 0x261fe8b2 ),	// a * b
	JSLL_INIT( 0x408e6949, 0x80445020 ),	// a & b
	JSLL_INIT( 0xfebfffdb, 0xcfdeff3f ),	// a | b
	JSLL_INIT( 0xbe319692, 0x4f9aaf1f ),	// a ^ b
	JSLL_INIT( 0xb3501436, 0x7f21aeca ),	// ~a
	JSLL_INIT( 0xb3501436, 0x7f21aecb ),	// -a
	JSLL_INIT( 0xfd79301b, 0xca26a000 ),	// a << 13
	JSLL_INIT( 0x0002657f, 0x5e4c06f2 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0002657f, 0x5e4c06f2 ),	// a >> 13 (unsigned)
	-2132913867, UINT32_C(2162053429),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x80de5135 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x80de5135 ),	// (uint64_t)(uint32_t)a
	"4cafebc980de5135",	// a (hexadecimal)
	"5525894518489895221",	// a (signed decimal)
	"5525894518489895221",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 15
	JSLL_INIT( 0x6040fd1d, 0x033d6440 ),	// a
	JSLL_INIT( 0x22dc27c5, 0xbdf42c52 ),	// b
	JSLL_INIT( 0x831d24e2, 0xc1319092 ),	// a + b
	JSLL_INIT( 0x3d64d557, 0x454937ee ),	// a - b
	JSLL_INIT( 0x2ae15ea0, 0x63e51c80 ),	// a * b
	JSLL_INIT( 0x20402505, 0x01342440 ),	// a & b
	JSLL_INIT( 0x62dcffdd, 0xbffd6c52 ),	// a | b
	JSLL_INIT( 0x429cdad8, 0xbec94812 ),	// a ^ b
	JSLL_INIT( 0x9fbf02e2, 0xfcc29bbf ),	// ~a
	JSLL_INIT( 0x9fbf02e2, 0xfcc29bc0 ),	// -a
	JSLL_INIT( 0x1fa3a067, 0xac880000 ),	// a << 13
	JSLL_INIT( 0x00030207, 0xe8e819eb ),	// a >> 13 (signed)
	JSLL_INIT( 0x00030207, 0xe8e819eb ),	// a >> 13 (unsigned)
	54355008, UINT32_C(54355008),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x033d6440 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x033d6440 ),	// (uint64_t)(uint32_t)a
	"6040fd1d033d6440",	// a (hexadecimal)
	"6935821727200797760",	// a (signed decimal)
	"6935821727200797760",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 16
	JSLL_INIT( 0x2fd28228, 0x47707a72 ),	// a
	JSLL_INIT( 0xac3e3981, 0x07fb9db0 ),	// b
	JSLL_INIT( 0xdc10bba9, 0x4f6c1822 ),	// a + b
	JSLL_INIT( 0x839448a7, 0x3f74dcc2 ),	// a - b
	JSLL_INIT( 0xfc8b6394, 0x44321860 ),	// a * b
	JSLL_INIT( 0x2c120000, 0x07701830 ),	// a & b
	JSLL_INIT( 0xaffebba9, 0x47fbfff2 ),	// a | b
	JSLL_INIT( 0x83ecbba9, 0x408be7c2 ),	// a ^ b
	JSLL_INIT( 0xd02d7dd7, 0xb88f858d ),	// ~a
	JSLL_INIT( 0xd02d7dd7, 0xb88f858e ),	// -a
	JSLL_INIT( 0x504508ee, 0x0f4e4000 ),	// a << 13
	JSLL_INIT( 0x00017e94, 0x11423b83 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00017e94, 0x11423b83 ),	// a >> 13 (unsigned)
	1198553714, UINT32_C(1198553714),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x47707a72 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x47707a72 ),	// (uint64_t)(uint32_t)a
	"2fd2822847707a72",	// a (hexadecimal)
	"3445959774400707186",	// a (signed decimal)
	"3445959774400707186",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 17
	JSLL_INIT( 0x8ceafc99, 0xe9c9b1a3 ),	// a
	JSLL_INIT( 0x1aaf42e9, 0xa1e09488 ),	// b
	JSLL_INIT( 0xa79a3f83, 0x8baa462b ),	// a + b
	JSLL_INIT( 0x723bb9b0, 0x47e91d1b ),	// a - b
	JSLL_INIT( 0x4e5f497a, 0xbf789a98 ),	// a * b
	JSLL_INIT( 0x08aa4089, 0xa1c09080 ),	// a & b
	JSLL_INIT( 0x9eeffef9, 0xe9e9b5ab ),	// a | b
	JSLL_INIT( 0x9645be70, 0x4829252b ),	// a ^ b
	JSLL_INIT( 0x73150366, 0x16364e5c ),	// ~a
	JSLL_INIT( 0x73150366, 0x16364e5d ),	// -a
	JSLL_INIT( 0x5f933d39, 0x36346000 ),	// a << 13
	JSLL_INIT( 0xfffc6757, 0xe4cf4e4d ),	// a >> 13 (signed)
	JSLL_INIT( 0x00046757, 0xe4cf4e4d ),	// a >> 13 (unsigned)
	-372657757, UINT32_C(3922309539),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xe9c9b1a3 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xe9c9b1a3 ),	// (uint64_t)(uint32_t)a
	"8ceafc99e9c9b1a3",	// a (hexadecimal)
	"-8292538025866841693",	// a (signed decimal)
	"10154206047842709923",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 18
	JSLL_INIT( 0x57a4e84a, 0x47782b0e ),	// a
	JSLL_INIT( 0x4fbc9c4d, 0xb995556b ),	// b
	JSLL_INIT( 0xa7618498, 0x010d8079 ),	// a + b
	JSLL_INIT( 0x07e84bfc, 0x8de2d5a3 ),	// a - b
	JSLL_INIT( 0xed98ac0a, 0xf2aba4da ),	// a * b
	JSLL_INIT( 0x47a48848, 0x0110010a ),	// a & b
	JSLL_INIT( 0x5fbcfc4f, 0xfffd7f6f ),	// a | b
	JSLL_INIT( 0x18187407, 0xfeed7e65 ),	// a ^ b
	JSLL_INIT( 0xa85b17b5, 0xb887d4f1 ),	// ~a
	JSLL_INIT( 0xa85b17b5, 0xb887d4f2 ),	// -a
	JSLL_INIT( 0x9d0948ef, 0x0561c000 ),	// a << 13
	JSLL_INIT( 0x0002bd27, 0x42523bc1 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0002bd27, 0x42523bc1 ),	// a >> 13 (unsigned)
	1199057678, UINT32_C(1199057678),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x47782b0e ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x47782b0e ),	// (uint64_t)(uint32_t)a
	"57a4e84a47782b0e",	// a (hexadecimal)
	"6315427983204559630",	// a (signed decimal)
	"6315427983204559630",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 19
	JSLL_INIT( 0x78fea910, 0x29d9300f ),	// a
	JSLL_INIT( 0x5abd3ab6, 0xa9517f49 ),	// b
	JSLL_INIT( 0xd3bbe3c6, 0xd32aaf58 ),	// a + b
	JSLL_INIT( 0x1e416e59, 0x8087b0c6 ),	// a - b
	JSLL_INIT( 0xb699697a, 0xc9852547 ),	// a * b
	JSLL_INIT( 0x58bc2810, 0x29513009 ),	// a & b
	JSLL_INIT( 0x7affbbb6, 0xa9d97f4f ),	// a | b
	JSLL_INIT( 0x224393a6, 0x80884f46 ),	// a ^ b
	JSLL_INIT( 0x870156ef, 0xd626cff0 ),	// ~a
	JSLL_INIT( 0x870156ef, 0xd626cff1 ),	// -a
	JSLL_INIT( 0xd522053b, 0x2601e000 ),	// a << 13
	JSLL_INIT( 0x0003c7f5, 0x48814ec9 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0003c7f5, 0x48814ec9 ),	// a >> 13 (unsigned)
	702099471, UINT32_C(702099471),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x29d9300f ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x29d9300f ),	// (uint64_t)(uint32_t)a
	"78fea91029d9300f",	// a (hexadecimal)
	"8718591815522529295",	// a (signed decimal)
	"8718591815522529295",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
};
typedef struct shiftrec_t {
   JSUint64 shl, ushr;
   JSInt64 shr;
} shiftrec_t;
typedef struct shifttest_t {
   JSUint64 base;
   shiftrec_t shift[63];
} shifttest_t;
const shifttest_t shift_tests[] = {
	{ JSLL_INIT( 0x00af305b, 0x2e171d42 ),	// record 0
	 {
		{ JSLL_INIT( 0x015e60b6, 0x5c2e3a84 ),	// shift left 1
		  JSLL_INIT( 0x0057982d, 0x970b8ea1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0057982d, 0x970b8ea1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x02bcc16c, 0xb85c7508 ),	// shift left 2
		  JSLL_INIT( 0x002bcc16, 0xcb85c750 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x002bcc16, 0xcb85c750 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x057982d9, 0x70b8ea10 ),	// shift left 3
		  JSLL_INIT( 0x0015e60b, 0x65c2e3a8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0015e60b, 0x65c2e3a8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0af305b2, 0xe171d420 ),	// shift left 4
		  JSLL_INIT( 0x000af305, 0xb2e171d4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000af305, 0xb2e171d4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x15e60b65, 0xc2e3a840 ),	// shift left 5
		  JSLL_INIT( 0x00057982, 0xd970b8ea ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00057982, 0xd970b8ea )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2bcc16cb, 0x85c75080 ),	// shift left 6
		  JSLL_INIT( 0x0002bcc1, 0x6cb85c75 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0002bcc1, 0x6cb85c75 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x57982d97, 0x0b8ea100 ),	// shift left 7
		  JSLL_INIT( 0x00015e60, 0xb65c2e3a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00015e60, 0xb65c2e3a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaf305b2e, 0x171d4200 ),	// shift left 8
		  JSLL_INIT( 0x0000af30, 0x5b2e171d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000af30, 0x5b2e171d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5e60b65c, 0x2e3a8400 ),	// shift left 9
		  JSLL_INIT( 0x00005798, 0x2d970b8e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00005798, 0x2d970b8e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbcc16cb8, 0x5c750800 ),	// shift left 10
		  JSLL_INIT( 0x00002bcc, 0x16cb85c7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00002bcc, 0x16cb85c7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7982d970, 0xb8ea1000 ),	// shift left 11
		  JSLL_INIT( 0x000015e6, 0x0b65c2e3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000015e6, 0x0b65c2e3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf305b2e1, 0x71d42000 ),	// shift left 12
		  JSLL_INIT( 0x00000af3, 0x05b2e171 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000af3, 0x05b2e171 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe60b65c2, 0xe3a84000 ),	// shift left 13
		  JSLL_INIT( 0x00000579, 0x82d970b8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000579, 0x82d970b8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcc16cb85, 0xc7508000 ),	// shift left 14
		  JSLL_INIT( 0x000002bc, 0xc16cb85c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000002bc, 0xc16cb85c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x982d970b, 0x8ea10000 ),	// shift left 15
		  JSLL_INIT( 0x0000015e, 0x60b65c2e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000015e, 0x60b65c2e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x305b2e17, 0x1d420000 ),	// shift left 16
		  JSLL_INIT( 0x000000af, 0x305b2e17 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000000af, 0x305b2e17 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60b65c2e, 0x3a840000 ),	// shift left 17
		  JSLL_INIT( 0x00000057, 0x982d970b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000057, 0x982d970b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc16cb85c, 0x75080000 ),	// shift left 18
		  JSLL_INIT( 0x0000002b, 0xcc16cb85 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000002b, 0xcc16cb85 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x82d970b8, 0xea100000 ),	// shift left 19
		  JSLL_INIT( 0x00000015, 0xe60b65c2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000015, 0xe60b65c2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x05b2e171, 0xd4200000 ),	// shift left 20
		  JSLL_INIT( 0x0000000a, 0xf305b2e1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000000a, 0xf305b2e1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0b65c2e3, 0xa8400000 ),	// shift left 21
		  JSLL_INIT( 0x00000005, 0x7982d970 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000005, 0x7982d970 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x16cb85c7, 0x50800000 ),	// shift left 22
		  JSLL_INIT( 0x00000002, 0xbcc16cb8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000002, 0xbcc16cb8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2d970b8e, 0xa1000000 ),	// shift left 23
		  JSLL_INIT( 0x00000001, 0x5e60b65c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000001, 0x5e60b65c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5b2e171d, 0x42000000 ),	// shift left 24
		  JSLL_INIT( 0x00000000, 0xaf305b2e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0xaf305b2e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb65c2e3a, 0x84000000 ),	// shift left 25
		  JSLL_INIT( 0x00000000, 0x57982d97 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x57982d97 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6cb85c75, 0x08000000 ),	// shift left 26
		  JSLL_INIT( 0x00000000, 0x2bcc16cb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x2bcc16cb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd970b8ea, 0x10000000 ),	// shift left 27
		  JSLL_INIT( 0x00000000, 0x15e60b65 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x15e60b65 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb2e171d4, 0x20000000 ),	// shift left 28
		  JSLL_INIT( 0x00000000, 0x0af305b2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0af305b2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x65c2e3a8, 0x40000000 ),	// shift left 29
		  JSLL_INIT( 0x00000000, 0x057982d9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x057982d9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcb85c750, 0x80000000 ),	// shift left 30
		  JSLL_INIT( 0x00000000, 0x02bcc16c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x02bcc16c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x970b8ea1, 0x00000000 ),	// shift left 31
		  JSLL_INIT( 0x00000000, 0x015e60b6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x015e60b6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2e171d42, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x00af305b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00af305b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5c2e3a84, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x0057982d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0057982d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb85c7508, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x002bcc16 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x002bcc16 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x70b8ea10, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x0015e60b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0015e60b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe171d420, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x000af305 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000af305 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc2e3a840, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x00057982 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00057982 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x85c75080, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x0002bcc1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0002bcc1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0b8ea100, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x00015e60 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00015e60 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x171d4200, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x0000af30 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000af30 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2e3a8400, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x00005798 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00005798 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5c750800, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x00002bcc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00002bcc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb8ea1000, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x000015e6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000015e6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x71d42000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x00000af3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000af3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe3a84000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x00000579 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000579 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc7508000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x000002bc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000002bc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8ea10000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x0000015e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000015e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1d420000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x000000af ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000000af )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3a840000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x00000057 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000057 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x75080000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x0000002b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000002b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xea100000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x00000015 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000015 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd4200000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x0000000a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000000a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa8400000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x00000005 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000005 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x50800000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x00000002 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000002 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa1000000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000001 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x42000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x84000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x08000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x10000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x20000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x40000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x00000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0x998ae86b, 0x27311fa3 ),	// record 1
	 {
		{ JSLL_INIT( 0x3315d0d6, 0x4e623f46 ),	// shift left 1
		  JSLL_INIT( 0x4cc57435, 0x93988fd1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xccc57435, 0x93988fd1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x662ba1ac, 0x9cc47e8c ),	// shift left 2
		  JSLL_INIT( 0x2662ba1a, 0xc9cc47e8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xe662ba1a, 0xc9cc47e8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcc574359, 0x3988fd18 ),	// shift left 3
		  JSLL_INIT( 0x13315d0d, 0x64e623f4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf3315d0d, 0x64e623f4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x98ae86b2, 0x7311fa30 ),	// shift left 4
		  JSLL_INIT( 0x0998ae86, 0xb27311fa ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf998ae86, 0xb27311fa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x315d0d64, 0xe623f460 ),	// shift left 5
		  JSLL_INIT( 0x04cc5743, 0x593988fd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfccc5743, 0x593988fd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x62ba1ac9, 0xcc47e8c0 ),	// shift left 6
		  JSLL_INIT( 0x02662ba1, 0xac9cc47e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfe662ba1, 0xac9cc47e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc5743593, 0x988fd180 ),	// shift left 7
		  JSLL_INIT( 0x013315d0, 0xd64e623f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff3315d0, 0xd64e623f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8ae86b27, 0x311fa300 ),	// shift left 8
		  JSLL_INIT( 0x00998ae8, 0x6b27311f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff998ae8, 0x6b27311f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x15d0d64e, 0x623f4600 ),	// shift left 9
		  JSLL_INIT( 0x004cc574, 0x3593988f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffccc574, 0x3593988f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2ba1ac9c, 0xc47e8c00 ),	// shift left 10
		  JSLL_INIT( 0x002662ba, 0x1ac9cc47 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffe662ba, 0x1ac9cc47 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x57435939, 0x88fd1800 ),	// shift left 11
		  JSLL_INIT( 0x0013315d, 0x0d64e623 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff3315d, 0x0d64e623 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xae86b273, 0x11fa3000 ),	// shift left 12
		  JSLL_INIT( 0x000998ae, 0x86b27311 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff998ae, 0x86b27311 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5d0d64e6, 0x23f46000 ),	// shift left 13
		  JSLL_INIT( 0x0004cc57, 0x43593988 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffccc57, 0x43593988 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xba1ac9cc, 0x47e8c000 ),	// shift left 14
		  JSLL_INIT( 0x0002662b, 0xa1ac9cc4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffe662b, 0xa1ac9cc4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x74359398, 0x8fd18000 ),	// shift left 15
		  JSLL_INIT( 0x00013315, 0xd0d64e62 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff3315, 0xd0d64e62 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe86b2731, 0x1fa30000 ),	// shift left 16
		  JSLL_INIT( 0x0000998a, 0xe86b2731 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff998a, 0xe86b2731 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd0d64e62, 0x3f460000 ),	// shift left 17
		  JSLL_INIT( 0x00004cc5, 0x74359398 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffccc5, 0x74359398 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa1ac9cc4, 0x7e8c0000 ),	// shift left 18
		  JSLL_INIT( 0x00002662, 0xba1ac9cc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffe662, 0xba1ac9cc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x43593988, 0xfd180000 ),	// shift left 19
		  JSLL_INIT( 0x00001331, 0x5d0d64e6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff331, 0x5d0d64e6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x86b27311, 0xfa300000 ),	// shift left 20
		  JSLL_INIT( 0x00000998, 0xae86b273 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff998, 0xae86b273 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0d64e623, 0xf4600000 ),	// shift left 21
		  JSLL_INIT( 0x000004cc, 0x57435939 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffccc, 0x57435939 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1ac9cc47, 0xe8c00000 ),	// shift left 22
		  JSLL_INIT( 0x00000266, 0x2ba1ac9c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffe66, 0x2ba1ac9c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3593988f, 0xd1800000 ),	// shift left 23
		  JSLL_INIT( 0x00000133, 0x15d0d64e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff33, 0x15d0d64e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6b27311f, 0xa3000000 ),	// shift left 24
		  JSLL_INIT( 0x00000099, 0x8ae86b27 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff99, 0x8ae86b27 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd64e623f, 0x46000000 ),	// shift left 25
		  JSLL_INIT( 0x0000004c, 0xc5743593 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffcc, 0xc5743593 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xac9cc47e, 0x8c000000 ),	// shift left 26
		  JSLL_INIT( 0x00000026, 0x62ba1ac9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffe6, 0x62ba1ac9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x593988fd, 0x18000000 ),	// shift left 27
		  JSLL_INIT( 0x00000013, 0x315d0d64 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff3, 0x315d0d64 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb27311fa, 0x30000000 ),	// shift left 28
		  JSLL_INIT( 0x00000009, 0x98ae86b2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff9, 0x98ae86b2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x64e623f4, 0x60000000 ),	// shift left 29
		  JSLL_INIT( 0x00000004, 0xcc574359 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffc, 0xcc574359 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc9cc47e8, 0xc0000000 ),	// shift left 30
		  JSLL_INIT( 0x00000002, 0x662ba1ac ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffe, 0x662ba1ac )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x93988fd1, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000001, 0x3315d0d6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x3315d0d6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x27311fa3, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x998ae86b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x998ae86b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4e623f46, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x4cc57435 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xccc57435 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9cc47e8c, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x2662ba1a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xe662ba1a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3988fd18, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x13315d0d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf3315d0d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7311fa30, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x0998ae86 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf998ae86 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe623f460, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x04cc5743 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfccc5743 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcc47e8c0, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x02662ba1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfe662ba1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x988fd180, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x013315d0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff3315d0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x311fa300, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x00998ae8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff998ae8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x623f4600, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x004cc574 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffccc574 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc47e8c00, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x002662ba ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffe662ba )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x88fd1800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x0013315d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff3315d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x11fa3000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x000998ae ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff998ae )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x23f46000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x0004cc57 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffccc57 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x47e8c000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x0002662b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffe662b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8fd18000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x00013315 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff3315 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1fa30000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x0000998a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff998a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3f460000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x00004cc5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffccc5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7e8c0000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x00002662 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffe662 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfd180000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x00001331 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff331 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfa300000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x00000998 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff998 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf4600000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x000004cc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffccc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe8c00000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x00000266 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffe66 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd1800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x00000133 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff33 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa3000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x00000099 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff99 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x46000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x0000004c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffcc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8c000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000026 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffe6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x18000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000013 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x30000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000009 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000004 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000002 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffff )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0x03637fad, 0x51008073 ),	// record 2
	 {
		{ JSLL_INIT( 0x06c6ff5a, 0xa20100e6 ),	// shift left 1
		  JSLL_INIT( 0x01b1bfd6, 0xa8804039 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x01b1bfd6, 0xa8804039 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0d8dfeb5, 0x440201cc ),	// shift left 2
		  JSLL_INIT( 0x00d8dfeb, 0x5440201c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00d8dfeb, 0x5440201c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1b1bfd6a, 0x88040398 ),	// shift left 3
		  JSLL_INIT( 0x006c6ff5, 0xaa20100e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x006c6ff5, 0xaa20100e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3637fad5, 0x10080730 ),	// shift left 4
		  JSLL_INIT( 0x003637fa, 0xd5100807 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x003637fa, 0xd5100807 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6c6ff5aa, 0x20100e60 ),	// shift left 5
		  JSLL_INIT( 0x001b1bfd, 0x6a880403 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x001b1bfd, 0x6a880403 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd8dfeb54, 0x40201cc0 ),	// shift left 6
		  JSLL_INIT( 0x000d8dfe, 0xb5440201 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000d8dfe, 0xb5440201 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb1bfd6a8, 0x80403980 ),	// shift left 7
		  JSLL_INIT( 0x0006c6ff, 0x5aa20100 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0006c6ff, 0x5aa20100 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x637fad51, 0x00807300 ),	// shift left 8
		  JSLL_INIT( 0x0003637f, 0xad510080 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0003637f, 0xad510080 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc6ff5aa2, 0x0100e600 ),	// shift left 9
		  JSLL_INIT( 0x0001b1bf, 0xd6a88040 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0001b1bf, 0xd6a88040 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8dfeb544, 0x0201cc00 ),	// shift left 10
		  JSLL_INIT( 0x0000d8df, 0xeb544020 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000d8df, 0xeb544020 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1bfd6a88, 0x04039800 ),	// shift left 11
		  JSLL_INIT( 0x00006c6f, 0xf5aa2010 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00006c6f, 0xf5aa2010 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x37fad510, 0x08073000 ),	// shift left 12
		  JSLL_INIT( 0x00003637, 0xfad51008 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00003637, 0xfad51008 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6ff5aa20, 0x100e6000 ),	// shift left 13
		  JSLL_INIT( 0x00001b1b, 0xfd6a8804 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00001b1b, 0xfd6a8804 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdfeb5440, 0x201cc000 ),	// shift left 14
		  JSLL_INIT( 0x00000d8d, 0xfeb54402 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000d8d, 0xfeb54402 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbfd6a880, 0x40398000 ),	// shift left 15
		  JSLL_INIT( 0x000006c6, 0xff5aa201 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000006c6, 0xff5aa201 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7fad5100, 0x80730000 ),	// shift left 16
		  JSLL_INIT( 0x00000363, 0x7fad5100 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000363, 0x7fad5100 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xff5aa201, 0x00e60000 ),	// shift left 17
		  JSLL_INIT( 0x000001b1, 0xbfd6a880 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000001b1, 0xbfd6a880 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfeb54402, 0x01cc0000 ),	// shift left 18
		  JSLL_INIT( 0x000000d8, 0xdfeb5440 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000000d8, 0xdfeb5440 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfd6a8804, 0x03980000 ),	// shift left 19
		  JSLL_INIT( 0x0000006c, 0x6ff5aa20 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000006c, 0x6ff5aa20 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfad51008, 0x07300000 ),	// shift left 20
		  JSLL_INIT( 0x00000036, 0x37fad510 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000036, 0x37fad510 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf5aa2010, 0x0e600000 ),	// shift left 21
		  JSLL_INIT( 0x0000001b, 0x1bfd6a88 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000001b, 0x1bfd6a88 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeb544020, 0x1cc00000 ),	// shift left 22
		  JSLL_INIT( 0x0000000d, 0x8dfeb544 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000000d, 0x8dfeb544 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd6a88040, 0x39800000 ),	// shift left 23
		  JSLL_INIT( 0x00000006, 0xc6ff5aa2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000006, 0xc6ff5aa2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xad510080, 0x73000000 ),	// shift left 24
		  JSLL_INIT( 0x00000003, 0x637fad51 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000003, 0x637fad51 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5aa20100, 0xe6000000 ),	// shift left 25
		  JSLL_INIT( 0x00000001, 0xb1bfd6a8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000001, 0xb1bfd6a8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb5440201, 0xcc000000 ),	// shift left 26
		  JSLL_INIT( 0x00000000, 0xd8dfeb54 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0xd8dfeb54 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6a880403, 0x98000000 ),	// shift left 27
		  JSLL_INIT( 0x00000000, 0x6c6ff5aa ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x6c6ff5aa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd5100807, 0x30000000 ),	// shift left 28
		  JSLL_INIT( 0x00000000, 0x3637fad5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x3637fad5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaa20100e, 0x60000000 ),	// shift left 29
		  JSLL_INIT( 0x00000000, 0x1b1bfd6a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x1b1bfd6a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5440201c, 0xc0000000 ),	// shift left 30
		  JSLL_INIT( 0x00000000, 0x0d8dfeb5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0d8dfeb5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa8804039, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000000, 0x06c6ff5a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x06c6ff5a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x51008073, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x03637fad ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x03637fad )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa20100e6, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x01b1bfd6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x01b1bfd6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x440201cc, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x00d8dfeb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00d8dfeb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x88040398, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x006c6ff5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x006c6ff5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x10080730, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x003637fa ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x003637fa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x20100e60, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x001b1bfd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x001b1bfd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x40201cc0, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x000d8dfe ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000d8dfe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80403980, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x0006c6ff ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0006c6ff )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x00807300, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x0003637f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0003637f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0100e600, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x0001b1bf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0001b1bf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0201cc00, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x0000d8df ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000d8df )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x04039800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x00006c6f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00006c6f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x08073000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x00003637 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00003637 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x100e6000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x00001b1b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00001b1b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x201cc000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x00000d8d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000d8d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x40398000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x000006c6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000006c6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80730000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x00000363 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000363 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x00e60000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x000001b1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000001b1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x01cc0000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x000000d8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000000d8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x03980000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x0000006c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000006c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x07300000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x00000036 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000036 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0e600000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x0000001b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000001b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1cc00000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x0000000d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000000d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x39800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x00000006 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000006 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x73000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x00000003 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000003 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe6000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000001 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcc000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x98000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x30000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0xd4a1216c, 0x4f471ef1 ),	// record 3
	 {
		{ JSLL_INIT( 0xa94242d8, 0x9e8e3de2 ),	// shift left 1
		  JSLL_INIT( 0x6a5090b6, 0x27a38f78 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xea5090b6, 0x27a38f78 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x528485b1, 0x3d1c7bc4 ),	// shift left 2
		  JSLL_INIT( 0x3528485b, 0x13d1c7bc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf528485b, 0x13d1c7bc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa5090b62, 0x7a38f788 ),	// shift left 3
		  JSLL_INIT( 0x1a94242d, 0x89e8e3de ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfa94242d, 0x89e8e3de )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4a1216c4, 0xf471ef10 ),	// shift left 4
		  JSLL_INIT( 0x0d4a1216, 0xc4f471ef ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfd4a1216, 0xc4f471ef )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x94242d89, 0xe8e3de20 ),	// shift left 5
		  JSLL_INIT( 0x06a5090b, 0x627a38f7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfea5090b, 0x627a38f7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x28485b13, 0xd1c7bc40 ),	// shift left 6
		  JSLL_INIT( 0x03528485, 0xb13d1c7b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff528485, 0xb13d1c7b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5090b627, 0xa38f7880 ),	// shift left 7
		  JSLL_INIT( 0x01a94242, 0xd89e8e3d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffa94242, 0xd89e8e3d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa1216c4f, 0x471ef100 ),	// shift left 8
		  JSLL_INIT( 0x00d4a121, 0x6c4f471e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffd4a121, 0x6c4f471e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4242d89e, 0x8e3de200 ),	// shift left 9
		  JSLL_INIT( 0x006a5090, 0xb627a38f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffea5090, 0xb627a38f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8485b13d, 0x1c7bc400 ),	// shift left 10
		  JSLL_INIT( 0x00352848, 0x5b13d1c7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff52848, 0x5b13d1c7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x090b627a, 0x38f78800 ),	// shift left 11
		  JSLL_INIT( 0x001a9424, 0x2d89e8e3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffa9424, 0x2d89e8e3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1216c4f4, 0x71ef1000 ),	// shift left 12
		  JSLL_INIT( 0x000d4a12, 0x16c4f471 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffd4a12, 0x16c4f471 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x242d89e8, 0xe3de2000 ),	// shift left 13
		  JSLL_INIT( 0x0006a509, 0x0b627a38 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffea509, 0x0b627a38 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x485b13d1, 0xc7bc4000 ),	// shift left 14
		  JSLL_INIT( 0x00035284, 0x85b13d1c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff5284, 0x85b13d1c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x90b627a3, 0x8f788000 ),	// shift left 15
		  JSLL_INIT( 0x0001a942, 0x42d89e8e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffa942, 0x42d89e8e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x216c4f47, 0x1ef10000 ),	// shift left 16
		  JSLL_INIT( 0x0000d4a1, 0x216c4f47 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffd4a1, 0x216c4f47 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x42d89e8e, 0x3de20000 ),	// shift left 17
		  JSLL_INIT( 0x00006a50, 0x90b627a3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffea50, 0x90b627a3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x85b13d1c, 0x7bc40000 ),	// shift left 18
		  JSLL_INIT( 0x00003528, 0x485b13d1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff528, 0x485b13d1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0b627a38, 0xf7880000 ),	// shift left 19
		  JSLL_INIT( 0x00001a94, 0x242d89e8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffa94, 0x242d89e8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x16c4f471, 0xef100000 ),	// shift left 20
		  JSLL_INIT( 0x00000d4a, 0x1216c4f4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffd4a, 0x1216c4f4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2d89e8e3, 0xde200000 ),	// shift left 21
		  JSLL_INIT( 0x000006a5, 0x090b627a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffea5, 0x090b627a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5b13d1c7, 0xbc400000 ),	// shift left 22
		  JSLL_INIT( 0x00000352, 0x8485b13d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff52, 0x8485b13d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb627a38f, 0x78800000 ),	// shift left 23
		  JSLL_INIT( 0x000001a9, 0x4242d89e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffa9, 0x4242d89e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6c4f471e, 0xf1000000 ),	// shift left 24
		  JSLL_INIT( 0x000000d4, 0xa1216c4f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffd4, 0xa1216c4f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd89e8e3d, 0xe2000000 ),	// shift left 25
		  JSLL_INIT( 0x0000006a, 0x5090b627 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffea, 0x5090b627 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb13d1c7b, 0xc4000000 ),	// shift left 26
		  JSLL_INIT( 0x00000035, 0x28485b13 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff5, 0x28485b13 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x627a38f7, 0x88000000 ),	// shift left 27
		  JSLL_INIT( 0x0000001a, 0x94242d89 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffa, 0x94242d89 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc4f471ef, 0x10000000 ),	// shift left 28
		  JSLL_INIT( 0x0000000d, 0x4a1216c4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffd, 0x4a1216c4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x89e8e3de, 0x20000000 ),	// shift left 29
		  JSLL_INIT( 0x00000006, 0xa5090b62 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffe, 0xa5090b62 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x13d1c7bc, 0x40000000 ),	// shift left 30
		  JSLL_INIT( 0x00000003, 0x528485b1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x528485b1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x27a38f78, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000001, 0xa94242d8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xa94242d8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4f471ef1, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0xd4a1216c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xd4a1216c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9e8e3de2, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x6a5090b6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xea5090b6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3d1c7bc4, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x3528485b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf528485b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7a38f788, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x1a94242d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfa94242d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf471ef10, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x0d4a1216 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfd4a1216 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe8e3de20, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x06a5090b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfea5090b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd1c7bc40, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x03528485 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff528485 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa38f7880, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x01a94242 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffa94242 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x471ef100, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x00d4a121 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffd4a121 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8e3de200, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x006a5090 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffea5090 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1c7bc400, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x00352848 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff52848 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x38f78800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x001a9424 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffa9424 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x71ef1000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x000d4a12 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffd4a12 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe3de2000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x0006a509 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffea509 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc7bc4000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x00035284 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff5284 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8f788000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x0001a942 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffa942 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1ef10000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x0000d4a1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffd4a1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3de20000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x00006a50 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffea50 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7bc40000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x00003528 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff528 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf7880000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x00001a94 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffa94 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xef100000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x00000d4a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffd4a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xde200000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x000006a5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffea5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbc400000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x00000352 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff52 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x78800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x000001a9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffa9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf1000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x000000d4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffd4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe2000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x0000006a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffea )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc4000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000035 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x88000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x0000001a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x10000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x0000000d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x20000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000006 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x40000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000003 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffff )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffff )	// shift right (arithmetic/signed)
		},
	 },
	},
};
