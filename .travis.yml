branches:
    only: 
        - master

language: c
os: linux
compiler: gcc

# services: 
#     - docker

# If we get headless builds on MCUXpresso working this is a potential start
# before_install:
#     - printf "FROM misprit7/whistler-blackcomb:mcuxpressoide\nRUN mkdir -p /home/Whistler-Blackcomb\nCOPY . /home/Whistler-Blackcomb" > Dockerfile
#     - docker build -t whistler-blackcomb-source .
#     - docker run whistler-blackcomb-source /bin/sh -c "ls; pwd; mcuxpressoide -nosplash --launcher.suppressErrors -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data /home -cleanBuild Whistler-Blackcomb"

# For updated CMake
# This was copied directly from here: https://riptutorial.com/cmake/example/4723/configure-travis-ci-with-newest-cmake
install:    
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz
  # this is optional, but useful:
  # do a quick md5 check to ensure that the archive we downloaded did not get compromised
  - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.3.2-Linux-x86_64.tar.gz" > cmake_md5.txt
  - md5sum -c cmake_md5.txt
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.3.2-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.3.2-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

before_script:
    - mkdir -p build
    - cd build
    - cmake -S .. -B .

script: 
    - cmake --build build
    - cd build && ctest -j14 -C Debug -T test --output-on-failure
